package components.preferences;

import app.di.GuiceBootstrap;
import jakarta.inject.Inject;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.AbstractAction;
import ui.DialogService;

/** Restores all preferences to their factory defaults. */
public class RestoreDefaultsAction extends AbstractAction {

    private final PreferencesFrame preferencesFrame;

    @Inject
    public RestoreDefaultsAction(PreferencesFrame preferencesFrame) {
        this.preferencesFrame = preferencesFrame;
    }

    /**
     * Recurses through all <code>AbstractPreferenceDisplays</code>, and restores them to their
     * defaults. Afterward notifies user of success and hides the <code>PreferencesFrame</code>.
     *
     * @param e The <code>ActionEvent</code> generated by the trigger
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        List<AbstractPreferenceDisplay> allPrefs = preferencesFrame.getAbstractPreferences();
        for (int i = 0; i < allPrefs.size(); i++) {
            allPrefs.get(i).restoreDefault();
        }
        DialogService dialogService = GuiceBootstrap.getInjectedInstance(DialogService.class);
        if (dialogService == null) {
            throw new IllegalStateException("DialogService not available via DI");
        }
        dialogService.showInfo("All preferences successfully restored to defaults.");

        // safer than directly using setVisible(false), since this double checks the assumption that
        // all preferences are saved
        preferencesFrame.windowClosing(
                new WindowEvent(preferencesFrame, WindowEvent.WINDOW_CLOSING));
    }
}
