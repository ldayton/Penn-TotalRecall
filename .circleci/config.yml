version: 2.1

# Define executors
executors:
  macos-executor:
    macos:
      xcode: "none"  # No Xcode needed for Java builds
    resource_class: macos.m4.pro.medium
    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.workers.max=6 -Dorg.gradle.parallel=true -Dorg.gradle.caching=false"
      CI: "true"

# Define jobs
jobs:
  build-and-test:
    executor: macos-executor
    steps:
      - checkout
      
      # Cache Java installation
      - restore_cache:
          keys:
            - java-23-v1-{{ arch }}
            - java-23-v1-
      
      # Cache only downloads (dependencies and Gradle wrapper)
      - restore_cache:
          keys:
            - gradle-downloads-v1-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - gradle-downloads-v1-{{ checksum "build.gradle" }}
            - gradle-downloads-v1-
      
      # Install Oracle Java 23 (cached for performance)
      - run:
          name: Install Oracle Java 23
          command: |
            if [ -d "/Library/Java/JavaVirtualMachines/jdk-23.0.1.jdk" ]; then
              echo "Java 23 already installed (cached)"
            else
              echo "Downloading Oracle JDK 23..."
              curl -L -o jdk-23_macos-aarch64_bin.tar.gz "https://download.oracle.com/java/23/archive/jdk-23.0.1_macos-aarch64_bin.tar.gz"
              tar -xzf jdk-23_macos-aarch64_bin.tar.gz
              sudo mv jdk-23.0.1.jdk /Library/Java/JavaVirtualMachines/
              rm jdk-23_macos-aarch64_bin.tar.gz
            fi
            echo 'export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-23.0.1.jdk/Contents/Home' >> $BASH_ENV
            echo 'export PATH="$JAVA_HOME/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      
      # Make Gradle wrapper executable
      - run:
          name: Make Gradle wrapper executable
          command: chmod +x ./gradlew
      
      # Fast compilation and formatting check (fail early)
      - run:
          name: Compile and check formatting
          command: ./gradlew compileJava spotlessCheck
      
      # Run tests (skips audio tests on CI)
      - run:
          name: Run tests
          command: ./gradlew test
      
      # Build distribution packages (only if tests pass)
      - run:
          name: Build macOS packages
          command: ./gradlew packageMacApp packageMacDmg
      
      # Store test results
      - store_test_results:
          path: build/test-results/test
      
      # Store test reports
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-reports
      
      # Store DMG as artifact
      - store_artifacts:
          path: tmp/mac/Penn TotalRecall-1.0.0.dmg
          destination: Penn TotalRecall-1.0.0.dmg
      
      # Save Java installation cache
      - save_cache:
          key: java-23-v1-{{ arch }}
          paths:
            - /Library/Java/JavaVirtualMachines/jdk-23.0.1.jdk
      
      # Save only download caches (not build outputs)
      - save_cache:
          key: gradle-downloads-v1-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/caches/modules-2          # Downloaded dependencies only
            - ~/.gradle/wrapper                   # Gradle distribution
            - gradle/wrapper                      # Project wrapper files

# Define workflows
workflows:
  version: 2
  build-workflow:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - main
                - develop
                - /feature\/.*/
                - /hotfix\/.*/